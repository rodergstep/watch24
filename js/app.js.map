{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function($) {\n  $('.filter__btn-more').click(function() {\n    $(this).closest('.filter__block').find('ul li:nth-child(n + 5)').slideToggle('fast');\n  });\n  $('.btn-filters-trigger ').click(function() {\n    $('body').toggleClass('filter-mobile-showing');\n  });\n\n  $('.custom-tooltip').mouseenter(function() {\n    $(this).find('.custom-tooltip__popup').fadeToggle();\n  });\n  $('.custom-tooltip').mouseleave(function() {\n    $(this).find('.custom-tooltip__popup').fadeToggle();\n  });\n\n  // slick slider\n  const $carouselWrappers = $('.carousel-wrapper');\n  if ($carouselWrappers.length) {\n    $carouselWrappers.each(function() {\n      const $carousel = $(this).children('.carousel');\n\n      if ($carousel.hasClass('slick-initialized')) return;\n\n      const savedOptions = $(this).data('carousel-settings');\n\n      let tabletSlides = savedOptions.slidesToShow == 1 ? 1 : 2;\n\n      let defaultOptions = {\n        dots: true,\n        // appendDots: $('.dots-container'),\n        arrows: true,\n        nextArrow: '<button type=\"button\" class=\"slick-next\"><span class=\"nav-text h5\">Next</span></button>',\n        prevArrow: '<button type=\"button\" class=\"slick-prev\"><span class=\"nav-text h5\">Previous</span></button>',\n        responsive: [\n          {\n            breakpoint: 767,\n            settings: { slidesToShow: tabletSlides, slidesToScroll: tabletSlides },\n          },\n        ],\n      };\n\n      if (savedOptions.hasOwnProperty('mobile')) {\n        defaultOptions.responsive.push({\n          breakpoint: 600,\n          settings: { slidesToShow: savedOptions.mobile, slidesToScroll: 1 },\n        });\n      } else {\n        defaultOptions.responsive.push({\n          breakpoint: 600,\n          settings: { slidesToShow: 1, slidesToScroll: 1 },\n        });\n      }\n\n      const slickOptions = $.extend({}, defaultOptions, savedOptions);\n      $carousel.on('init reInit afterChange', function(event, slick, currentSlide, nextSlide) {\n        const i = (currentSlide || 0) + 1;\n        $(this)\n          .next('.carousel-slide-counter')\n          .html(\n            `<span class=\"current\">${i}</span><span class=\"slash\">/</span><span class=\"total\">${slick.slideCount}</span>`,\n          );\n      });\n\n      $carousel.on('beforeChange', (e, slick, currentSlide, nextSlide) => {\n        let $animatingElements = $(`div.slick-slide[data-slick-index=\"${nextSlide}\"]`).find(\n          '[data-animation]',\n        );\n      });\n      $carousel.slick(slickOptions);\n    });\n  }\n  // end Slick slider\n  // Google Map\n  var googleMapsLoaded = false;\n  window.initMaps = function() {\n    var $maps = $('.map-canvas');\n    if ($maps.length) {\n      console.log('lllll');\n      if (!googleMapsLoaded) {\n        var key = 'AIzaSyDe4WeeWQ8_mWVwzL0Z9j3S4MpM6Of17wo';\n        $\n          .getScript('https://maps.google.com/maps/api/js?sensor=true&key=' + key)\n          .done(function(script, textStatus) {\n            googleMapsLoaded = true;\n            createMaps($maps);\n          })\n          .fail(function(jqxhr, settings, ex) {\n          });\n      } else {\n        createMaps($maps);\n      }\n    }\n  };\n\n  window.createMaps = function($maps) {\n    $maps.each(function() {\n      let latitude = this.getAttribute('data-latitude');\n      let longitude = this.getAttribute('data-longitude');\n      if (!latitude && !longitude) {\n        latitude = '49.839683';\n        longitude = '24.029717';\n      }\n      // console.log(this);\n      var mapOptions = {\n        zoom: 15,\n        center: new google.maps.LatLng(latitude, longitude),\n        marker: true,\n        scrollwheel: false,\n        mapTypeControl: false,\n        streetViewControl: false,\n      };\n      var mapCanvas = $(this).get(0);\n      var map = new google.maps.Map(mapCanvas, mapOptions);\n      var myLatLong = new google.maps.LatLng(latitude, longitude);\n      // mapOptions.center = myLatLong;\n      if (mapOptions.marker) {\n        var marker = new google.maps.Marker({\n          position: myLatLong,\n          map: map,\n          title: 'Watch24.com',\n          icon: {\n            url: `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.38 39' width='24.38' height='39'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:%233c3b4d;%7D%3C/style%3E%3C/defs%3E%3Cpath class='cls-1' d='M12.19,0a12.19,12.19,0,0,0-11,17.45L12.19,39,23,17.72A12.19,12.19,0,0,0,12.19,0Zm0,19.5a7.31,7.31,0,1,1,7.31-7.31A7.31,7.31,0,0,1,12.19,19.5Z'/%3E%3C/svg%3E`,\n          },\n        });\n      }\n    });\n  };\n  initMaps();\n  // Google Map\n  \n  //  FILEUPLOADER\n  function ekUpload() {\n    function Init() {\n      console.log('Upload Initialised');\n\n      var fileSelect = document.getElementById('file-upload'),\n        fileDrag = document.getElementById('file-drag'),\n        submitButton = document.getElementById('submit-button');\n\n      fileSelect.addEventListener('change', fileSelectHandler, false);\n\n      // Is XHR2 available?\n      var xhr = new XMLHttpRequest();\n      if (xhr.upload) {\n        // File Drop\n        fileDrag.addEventListener('dragover', fileDragHover, false);\n        fileDrag.addEventListener('dragleave', fileDragHover, false);\n        fileDrag.addEventListener('drop', fileSelectHandler, false);\n      }\n    }\n\n    function fileDragHover(e) {\n      var fileDrag = document.getElementById('file-drag');\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      fileDrag.className = e.type === 'dragover' ? 'hover' : 'modal-body file-upload';\n    }\n\n    function fileSelectHandler(e) {\n      // Fetch FileList object\n      var files = e.target.files || e.dataTransfer.files;\n\n      // Cancel event and hover styling\n      fileDragHover(e);\n\n      // Process all File objects\n      for (var i = 0, f; f = files[i]; i++) {\n        parseFile(f);\n        uploadFile(f);\n      }\n    }\n\n    // Output\n    function output(msg) {\n      // Response\n      var m = document.getElementById('messages');\n      m.innerHTML = msg;\n    }\n\n    function parseFile(file) {\n      console.log(file.name);\n      output('<strong>' + encodeURI(file.name) + '</strong>');\n\n      // var fileType = file.type;\n      // console.log(fileType);\n      var imageName = file.name;\n\n      var isGood = /\\.(?=gif|jpg|png|jpeg)/gi.test(imageName);\n      if (isGood) {\n        document.getElementById('start').classList.add('hidden');\n        document.getElementById('response').classList.remove('hidden');\n        document.getElementById('notimage').classList.add('hidden');\n        // Thumbnail Preview\n        document.getElementById('file-image').classList.remove('hidden');\n        document.getElementById('file-image').src = URL.createObjectURL(file);\n      } else {\n        document.getElementById('file-image').classList.add('hidden');\n        document.getElementById('notimage').classList.remove('hidden');\n        document.getElementById('start').classList.remove('hidden');\n        document.getElementById('response').classList.add('hidden');\n        document.getElementById('file-upload-form').reset();\n      }\n    }\n\n    function setProgressMaxValue(e) {\n      var pBar = document.getElementById('file-progress');\n\n      if (e.lengthComputable) {\n        pBar.max = e.total;\n      }\n    }\n\n    function updateFileProgress(e) {\n      var pBar = document.getElementById('file-progress');\n\n      if (e.lengthComputable) {\n        pBar.value = e.loaded;\n      }\n    }\n\n    function uploadFile(file) {\n      var xhr = new XMLHttpRequest(),\n        fileInput = document.getElementById('class-roster-file'),\n        pBar = document.getElementById('file-progress'),\n        fileSizeLimit = 1024;\n      // In MB\n      if (xhr.upload) {\n        // Check if file is less than x MB\n        if (file.size <= fileSizeLimit * 1024 * 1024) {\n          // Progress bar\n          pBar.style.display = 'inline';\n          xhr.upload.addEventListener('loadstart', setProgressMaxValue, false);\n          xhr.upload.addEventListener('progress', updateFileProgress, false);\n\n          // File received / failed\n          xhr.onreadystatechange = function(e) {\n            if (xhr.readyState == 4) {\n              // Everything is good!\n              // progress.className = (xhr.status == 200 ? \"success\" : \"failure\");\n              // document.location.reload(true);\n            }\n          };\n\n          // Start upload\n          xhr.open('POST', document.getElementById('file-upload-form').action, true);\n          xhr.setRequestHeader('X-File-Name', file.name);\n          xhr.setRequestHeader('X-File-Size', file.size);\n          xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n          xhr.send(file);\n        } else {\n          output('Please upload a smaller file (< ' + fileSizeLimit + ' MB).');\n        }\n      }\n    }\n\n    // Check for the various File API support.\n    if (window.File && window.FileList && window.FileReader) {\n      Init();\n    } else {\n      document.getElementById('file-drag').style.display = 'none';\n    }\n  }\n  ekUpload();\n  // end FILEUPLOADER\n})(jQuery);\n"],"file":"app.js"}